/*
    The buildScript block determines which plugins, task classes,
    and other classes are available for use in the rest of the build script.
    Without a buildScript block, you can use everything that ships with Gradle out-of-the-box.
    If you additionally want to use third-party plugins, task classes, or other classes (in the build script!),
    you have to specify the corresponding dependencies in the buildScript block.
 */
buildscript {
    repositories {
        gradlePluginPortal()
    }

    dependencies {
        classpath "com.github.node-gradle:gradle-node-plugin:3.4.0"
    }
}

apply plugin: 'base'
apply plugin: 'com.github.node-gradle.node'

node {
    /* gradle-node-plugin configuration
      https://github.com/node-gradle/gradle-node-plugin/blob/master/docs/usage.md

       Task name pattern:
       ./gradlew npm_<command> Executes an NPM command.
    */

    // Version of node to use.
    version = '16.18.0'


    // Version of npm to use.
    npmVersion = '8.19.2'

    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = true
}

npm_run_build {
    inputs.files fileTree("public")
    inputs.files fileTree("src")

    inputs.file 'package.json'
    inputs.file 'package-lock.json'

    inputs.file 'vue.config.js'
    inputs.file 'jsconfig.json'

    inputs.files fileTree("node_modules").exclude(".cache")

    outputs.dir('dist')
}

assemble.dependsOn npm_run_build

